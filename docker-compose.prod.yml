version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: cliniktour-postgres-prod
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal-network

  # Приложение Spring Boot
  app:
    image: cliniktour-app-prod
    build: .
    container_name: cliniktour-app-prod
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "2817:2817"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - IMGUR_CLIENT_ID=${IMGUR_CLIENT_ID}
      - IMGUR_ACCESS_TOKEN=${IMGUR_ACCESS_TOKEN}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - SPRING_PROFILES_ACTIVE=prod
    volumes:
      - app-data:/app/data
      - app-logs:/app/logs
    restart: always
    networks:
      - internal-network

networks:
  internal-network:
    internal: true

volumes:
  postgres-data:
    name: cliniktour-postgres-prod-data
  app-data:
    name: cliniktour-app-prod-data
  app-logs:
    name: cliniktour-app-prod-logs